# Pipeline for azure-web-extensions

trigger:
- master

variables:
  BootsDir: $(System.DefaultWorkingDirectory)\Tasks\Boots

jobs:
- job: build_test_win
  displayName: Build and Test on Windows
  pool: Hosted Windows 2019 with VS2019
  timeoutInMinutes: 30
  steps:
  - task: NodeTool@0
    displayName: install node 10.x
    inputs:
      versionSpec: 10.x

  - task: Npm@1
    displayName: install mocha
    inputs:
      command: custom
      customCommand: install -g mocha

  - task: Npm@1
    displayName: install tfx-cli
    inputs:
      command: custom
      customCommand: install -g tfx-cli

  - task: Npm@1
    displayName: boots - npm install
    inputs:
      command: install
      workingDir: $(BootsDir)

  - script: tsc
    displayName: boots - compile typescript
    workingDirectory: $(BootsDir)

  - script: mocha Tests\suite.js
    displayName: boots - run tests
    workingDirectory: $(BootsDir)

  - script: tfx extension create --manifest-globs vss-extension.json --output-path $(Build.ArtifactStagingDirectory)
    displayName: create tasks extension
    workingDirectory: $(System.DefaultWorkingDirectory)\Tasks

  - task: PublishPipelineArtifact@0
    displayName: upload tasks extension
    inputs:
      artifactName: azp-tasks-extension
      targetPath: $(Build.ArtifactStagingDirectory)

- job: run_boots_win
  displayName: Run Boots on Windows
  pool: Hosted Windows 2019 with VS2019
  timeoutInMinutes: 30
  steps:
  - task: Boots@1
    displayName: Install Project System Tools with Boots
    inputs:
      uri: https://marketplace.visualstudio.com/_apis/public/gallery/publishers/VisualStudioProductTeam/vsextensions/ProjectSystemTools/1.0.1.1927902/vspackage

- job: run_boots_mac
  displayName: Run Boots on Mac
  pool: Hosted macOS
  timeoutInMinutes: 30
  steps:
  - task: Boots@1
    displayName: Install Xamarin.Android with Boots
    inputs:
      uri: https://aka.ms/xamarin-android-commercial-d16-2-macos
